✅ COMPLETE STARTUP CHECKLIST
=============================

Follow this step by step. Check off each item as you go.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PREPARATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[ ] Project folder exists:
    c:\Users\Sergio Paya Borrull\OneDrive\Documents\GitHub\.vscode\New folder\SergiLIFE-life-azure-system\SergiLIFE-life-azure-system\

[ ] File exists: life_backend_server.py
[ ] File exists: LIFE_AI_PLATFORM_REAL.html
[ ] File exists: PLATFORM_BACKEND_INTEGRATION.js
[ ] File exists: START.bat

[ ] Python installed (Windows Key + R, type "python", press Enter)
    Should show: Python X.X.X

[ ] Internet browser installed (Chrome, Edge, Firefox, etc.)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

METHOD 1: AUTOMATED (RECOMMENDED)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[ ] Navigate to project folder

[ ] Right-click in empty space
[ ] Select: Open in Terminal
    OR double-click: START.bat

[ ] Wait for two cmd windows to open:
    - "L.I.F.E Backend"
    - "L.I.F.E HTTP"

[ ] Wait 5-10 seconds for both servers to start

[ ] Browser should auto-open to:
    http://localhost:8080/LIFE_AI_PLATFORM_REAL.html

[ ] Check browser header for status:
    Should show: 🟢 Real Algorithm (Backend Connected)
    
    If shows: 🟡 Simulated Data (wait 10 more seconds)
    If shows: Error (check "TROUBLESHOOTING" section below)

[ ] Go to "EEG AI Integration" tab

[ ] Click "Process EEG AI Integration" button

[ ] Wait 2-5 seconds

[ ] See results with "REAL_ALGORITHM" source

✅ SUCCESS!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

METHOD 2: MANUAL (FOR DEBUGGING)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Terminal 1 - Backend Server:
[ ] Open Command Prompt (Windows Key + R → cmd → Enter)
[ ] Navigate: cd /d "c:\Users\Sergio Paya Borrull\OneDrive\Documents\GitHub\.vscode\New folder\SergiLIFE-life-azure-system\SergiLIFE-life-azure-system"
[ ] Install: pip install flask flask-cors numpy
[ ] Start: python life_backend_server.py
[ ] Wait until you see: ✅ Backend server running on http://localhost:5000
[ ] ⚠️  DO NOT CLOSE THIS WINDOW

Terminal 2 - HTTP Server:
[ ] Open another Command Prompt
[ ] Navigate: cd /d "c:\Users\Sergio Paya Borrull\OneDrive\Documents\GitHub\.vscode\New folder\SergiLIFE-life-azure-system\SergiLIFE-life-azure-system"
[ ] Start: python -m http.server 8080
[ ] Wait until you see: Serving HTTP on 0.0.0.0 port 8080
[ ] ⚠️  DO NOT CLOSE THIS WINDOW

Browser:
[ ] Open any web browser
[ ] Type: http://localhost:8080/LIFE_AI_PLATFORM_REAL.html
[ ] Press: Enter
[ ] Wait 5 seconds for page to load
[ ] Check header for: 🟢 Real Algorithm (Backend Connected)

Testing:
[ ] Click: "EEG AI Integration" tab
[ ] Click: "Process EEG AI Integration" button
[ ] Wait 2-5 seconds
[ ] See: Results with REAL_ALGORITHM source

✅ SUCCESS!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

VERIFICATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Backend Terminal Should Show:
[ ] 🧠 L.I.F.E PLATFORM BACKEND SERVER
[ ] ✅ Backend server running on http://localhost:5000
[ ] Request logs when you click buttons

HTTP Terminal Should Show:
[ ] Serving HTTP on 0.0.0.0 port 8080
[ ] GET requests when you open page
[ ] GET requests for .js, .html, .css files

Browser Should Show:
[ ] Page loads (not blank, not error)
[ ] Header visible with logo
[ ] Navigation tabs clickable
[ ] Status indicator visible
[ ] 🟢 GREEN or 🟡 YELLOW status

Processing EEG Should:
[ ] Not show error immediately
[ ] Show loading indicator or wait 2-5 seconds
[ ] Display results with metrics
[ ] Show "REAL_ALGORITHM" as source
[ ] Metrics vary (not all 75-100)
[ ] Show optimization suggestions

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Issue: "localhost refused to connect"
Cause: Backend server not running
Fix:   Make sure Terminal 1 is running (see checklist above)

Issue: "Port already in use"
Cause: Another app using port 5000 or 8080
Fix:   Change ports in configuration
      OR kill the process using the port
      OR wait and try again later

Issue: Browser shows 🟡 YELLOW status after 10 seconds
Cause: Backend is not responding fast enough
Fix:   Wait longer (up to 30 seconds)
      OR restart both servers
      OR check backend terminal for errors

Issue: "python: command not found"
Cause: Python not installed or not in PATH
Fix:   Install Python from python.org
      Check "Add Python to PATH"
      Restart computer
      Try again

Issue: "No module named flask"
Cause: Packages not installed
Fix:   Run: pip install flask flask-cors numpy
      Wait for completion
      Try again

Issue: Page shows but no data
Cause: Backend crashed or not processing
Fix:   Check backend terminal for error messages
      Restart backend (close Terminal 1, run again)
      Check browser console (F12) for JavaScript errors

Issue: Status shows 🟡 YELLOW and won't change
Cause: Backend not fully started
Fix:   Wait another 10 seconds
      OR restart backend server
      OR check if port 5000 is in use

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

WHEN FINISHED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

[ ] Simply close both cmd windows
[ ] Close browser
[ ] Done!

Next time: Just double-click START.bat again

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

READY? Pick Method 1 or 2 above and start! 🚀
